/* 

Shim เป็นกระบวนการเล็กๆ ที่ทำหน้าที่เป็นตัวกลางระหว่าง containerd และ container เมื่อสร้าง container ใหม่ containerd จะสร้าง shim process และ runc process ขึ้นมา

รunc process จะหยุดทำงานหลังจากสร้าง container เสร็จ แต่ shim process จะยังคงอยู่เป็นกระบวนการหลักของ container มีหน้าที่:

1. รายงานสถานะของ container 
2. จัดการช่องทางนำเข้า/นำออกข้อมูล (STDIN/STDOUT) ของ container
3. เปิดช่องให้สามารถใช้รันไทม์อื่นแทน runc ได้

เมื่อรันคำสั่ง `docker run` มีขั้นตอนดังนี้:

```
     +----------------+
     | Docker Daemon  |
     +----------------+
            |
     +----------------+
     |  containerd    |
     +----------------+
            |
 +----------+----------+
 |          |          |
 |  shim    |  runc    |
 |          |          |
 +----------+----------+
            |
     +----------------+
     |    Container   |
     +----------------+
```

1. Docker Daemon ได้รับคำสั่ง `docker run` และส่งต่อให้ containerd
2. containerd จะสร้างกระบวนการ shim และ runc ขึ้นมาสำหรับ container ใหม่
3. runc จะเริ่มสร้าง container ตามข้อกำหนดที่ได้รับ
4. เมื่อ container ถูกสร้างและเริ่มทำงานแล้ว runc จะหยุดทำงาน
5. shim จะคงอยู่เป็นกระบวนการหลักของ container ทำหน้าที่:
    - รายงานสถานะของ container ให้ containerd
    - จัดการช่องทาง STDIN/STDOUT ของ container
    - เปิดช่องให้สามารถใช้รันไทม์อื่นแทน runc ได้

จากแผนภาพ เราเห็นได้ว่า shim เป็นส่วนสำคัญที่ทำให้ container สามารถทำงานได้โดยไม่ต้องใช้ daemon ทำงานตลอดเวลา ทำให้มีประสิทธิภาพมากขึ้น
*/